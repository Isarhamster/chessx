name: CI

on:
  push:
    branches: [ master, ci-sandbox ]
  pull_request:
    branches: [ master ]

jobs:
  build-qmake:
    strategy:
      matrix:
        os: [macos-latest]
        qt: ['5.15.2']
    runs-on: ${{ matrix.os }}
  
    steps:
    - name: Install Qt ${{ matrix.qt }}
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.qt }}
        dir: ${{ runner.workspace }}/Qt-${{ matrix.qt }}
        cache: true
        cache-key-prefix: Qt-${{ matrix.os }}-${{ matrix.qt }}
    - name: Checkout sources
      uses: actions/checkout@v3
    - name: configure
      run: qmake
    - name: make
      run: make

  build:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, ubuntu-22.04]
        qt: ['5.15.2']

    steps:
    - name: Install Qt ${{ matrix.qt }}
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.qt }}
        dir: ${{ runner.workspace }}/Qt-${{ matrix.qt }}
        cache: true
        cache-key-prefix: Qt-${{ matrix.os }}-${{ matrix.qt }}

    - name: Checkout sources
      uses: actions/checkout@v3
      with:
        submodules: true

    # Install latest CMake
    - uses: lukka/get-cmake@latest

    # Restore from cache the previously built ports.
    # If a "cache miss" occurs, then vcpkg is bootstrapped.
    # Since a the vcpkg.json is being used later on to install the packages when `run-cmake` runs,
    # no packages are installed at this time.
    - name: Restore artifacts, or setup vcpkg (do not install any package)
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgJsonGlob: 'vcpkg.json'
        # runVcpkgInstall: true

    - name: Build + Test (Debug)
      uses: lukka/run-cmake@v10
      with:
        configurePreset: 'ci'
        buildPreset: 'ci-debug'
        testPreset: 'ci-debug'

    # - name: Create source package
    #   if: ${{ runner.os == 'Linux' }}
    #   run: cmake --build --preset ci-release --target package_source
    # - name: Create macOS installer
    #   if: ${{ runner.os == 'macOS' }}
    #   run: cmake --build --preset ci-release --target package

    #env:
    #  VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }} # [OPTIONAL] Define the vcpkg's triplet 
    # you want to enforce, otherwise the default one for the hosting system will be 
    # automatically choosen (x64 is the default on all platforms,  e.g. x64-osx).

  # build-min:
  #   runs-on: ubuntu-16.04
  #   env:
  #     QT_VERSION: '5.7'
  
  #   steps:
  #   - name: Cache Qt ${{ env.QT_VERSION }}
  #     id: cache-qt
  #     uses: actions/cache@v3
  #     with:
  #       path: ${{ runner.workspace }}/Qt${{ env.QT_VERSION }}
  #       key: ${{ runner.os }}-Qt${{ env.QT_VERSION }}

  #   - name: Install Qt ${{ env.QT_VERSION }}
  #     uses: jurplel/install-qt-action@v3
  #     with:
  #       version: ${{ env.QT_VERSION }}
  #       dir: ${{ runner.workspace }}/Qt${{ env.QT_VERSION }}
  #       cached: ${{ steps.cache-qt.outputs.cache-hit }}

  #   - name: Checkout sources
  #     uses: actions/checkout@v3

  #   - name: configure
  #     run: >-
  #       cmake -S . -B _build
  #       -DENABLE_SOUNDS=OFF
  #       -DENABLE_TTS=OFF
  #       -DENABLE_SCID_SUPPORT=OFF
  #   - name: make
  #     run: cmake --build _build
  #   - name: make test
  #     run: cd _build && ctest -V

